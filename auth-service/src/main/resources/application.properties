spring.application.name=auth-service
spring.flyway.enabled=true

jwt.secret=${JWT_SECRET:your-very-secure-secret-your-very-secure-secret}
jwt.expiration-ms=${JWT_EXPIRATION_MS:3600000}
jwt.refresh.expiration-ms=${REFRESH_EXPIRATION_MS:604800000}
spring.security.oauth2.resourceserver.jwt.secret-key=${JWT_SECRET:your-very-secure-secret-your-very-secure-secret}

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}

# OpenAPI/Swagger configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.displayRequestDuration=true
springdoc.swagger-ui.displayOperationId=true

logging.level.org.springdoc=DEBUG
management.endpoints.web.exposure.include=*
management.endpoint.mappings.enabled=true

# CORS configuration for Swagger UI
springdoc.swagger-ui.csrf.enabled=false

# OpenAPI Server URLs - configurable per environment
app.openapi.prod-url=${OPENAPI_PROD_URL:}
app.openapi.dev-url=${OPENAPI_DEV_URL:http://localhost:8080}
app.openapi.title=${OPENAPI_TITLE:JobPulse Auth Service API}
app.openapi.version=${OPENAPI_VERSION:1.0.0}
app.openapi.description=${OPENAPI_DESCRIPTION:Authentication and authorization service for JobPulse platform}

# Observability Configuration
management.endpoints.web.exposure.include=health,prometheus,metrics
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5, 0.95, 0.99
management.metrics.distribution.slo.http.server.requests=100ms, 200ms, 500ms, 1s, 2s
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=${SPRING_PROFILES_ACTIVE:dev}

# OpenTelemetry Configuration
management.otlp.metrics.export.enabled=true
management.otlp.tracing.export.enabled=true
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Enhanced Logging Configuration
logging.level.com.jobpulse.auth_service=DEBUG
logging.level.com.jobpulse.auth_service.events=DEBUG
logging.level.com.jobpulse.auth_service.domain=DEBUG
logging.level.com.jobpulse.auth_service.service=DEBUG
logging.level.com.jobpulse.auth_service.security=INFO

# Database connection pool metrics
spring.datasource.hikari.register-mbeans=true

# Reduce verbose logging for actuator endpoints
logging.level.org.springframework.web=INFO
logging.level.org.springframework.boot.actuate.endpoint.web=INFO
logging.level.org.springframework.security=INFO

# Environment-specific configuration inclusion
spring.config.import=optional:classpath:observability/environments/${OBSERVABILITY_ENV:dev}/application-observability.properties

# Async domain event config
async.domain-event.core-pool-size:2
async.domain-event.max-pool-size:5
async.domain-event.queue-capacity:100
async.domain-event.thread-name-prefix:DomainEvent-


# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.producer.retries=3
spring.kafka.producer.acks=all
spring.kafka.consumer.auto-offset-reset=earliest
user.events.topic=${USER_EVENTS_TOPIC:user.events}
user.events.topic.partition-count=${USER_EVENTS_TOPIC_PARTITION_COUNT:3}
user.events.topic.replica-count=${USER_EVENTS_TOPIC_REPLICA_COUNT:1}
