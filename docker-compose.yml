version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

  auth-db:
    image: postgres:16.2
    container_name: auth-db
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
    ports:
      - "5435:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authuser -d authdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  job-db:
    image: postgres:16.2
    container_name: job-db
    environment:
      POSTGRES_DB: jobdb
      POSTGRES_USER: jobuser
      POSTGRES_PASSWORD: jobpass
    ports:
      - "5436:5432"
    volumes:
      - job-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobuser -d jobdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: auth-service
    container_name: auth-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-db:5432/authdb
      - SPRING_DATASOURCE_USERNAME=authuser
      - SPRING_DATASOURCE_PASSWORD=authpass
      - JWT_SECRET=your-dev-secret-your-dev-secret-your-dev-secret-your-dev-secret
      - JWT_EXPIRATION_MS=3600000
      - REFRESH_EXPIRATION_MS=604800000
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      # OpenAPI Configuration
      - OPENAPI_DEV_URL=http://localhost:8080
      - OPENAPI_PROD_URL=
      - OPENAPI_TITLE=JobPulse Auth Service API (Development)
      - OPENAPI_VERSION=1.0.0
      - OPENAPI_DESCRIPTION=Authentication and authorization service for JobPulse platform - Development Environment
    depends_on:
      - auth-db
      - kafka

  jobcreationlisting:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: jobcreationlisting
    container_name: jobcreationlisting
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://job-db:5432/jobdb
      - SPRING_DATASOURCE_USERNAME=jobuser
      - SPRING_DATASOURCE_PASSWORD=jobpass
      - JWT_SECRET=your-dev-secret-your-dev-secret-your-dev-secret-your-dev-secret
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CONSUMER_GROUP=jobcreationlisting-group
      - USER_EVENTS_TOPIC=user.events
      # OpenAPI Configuration
      - OPENAPI_DEV_URL=http://localhost:8081
      - OPENAPI_PROD_URL=
      - OPENAPI_TITLE=JobPulse Job Service API (Development)
      - OPENAPI_VERSION=1.0.0
      - OPENAPI_DESCRIPTION=Job posting and management service for JobPulse platform - Development Environment
    depends_on:
      - job-db
      - kafka

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - auth-db
      - job-db

volumes:
  auth-db-data:
  job-db-data:

networks:
  default:
    name: jobpulse-network