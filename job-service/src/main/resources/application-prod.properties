# Production-specific configuration for job-service
spring.application.name=job-service
spring.flyway.enabled=true

# Production logging
logging.level.root=INFO
logging.level.com.jobpulse=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.file.name=/app/logs/job-service.log

# Database connection pool for production
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000

# JWT Configuration
jwt.secret=${JWT_SECRET}
spring.security.oauth2.resourceserver.jwt.secret-key=${JWT_SECRET}

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.retries=3
spring.kafka.producer.acks=all
user.events.topic=${USER_EVENTS_TOPIC}

# Actuator for health checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Security headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
