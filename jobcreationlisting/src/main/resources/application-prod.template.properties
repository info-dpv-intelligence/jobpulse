# ==============================================================================
# Production-specific configuration template for jobcreationlisting service
# ==============================================================================

spring.application.name=jobcreationlisting
spring.flyway.enabled=true
# Flyway debug logging should be disabled in production.
spring.flyway.debug=false

# --- JWT Configuration ---
# In production, default secret values must be removed.
# They MUST be provided via environment variables.
jwt.secret=${JWT_SECRET}
spring.security.oauth2.resourceserver.jwt.secret-key=${JWT_SECRET}


# --- Kafka Configuration ---
# Set the production Kafka bootstrap servers.
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:jobcreationlisting-group}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
user.events.topic=${USER_EVENTS_TOPIC:user.events}


# --- OpenAPI/Swagger UI Configuration ---
# Swagger UI and API docs should be disabled in production for security and performance.
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false
# The rest of the springdoc.* properties are now ignored.


# --- OpenAPI Server URLs ---
# Set the production server URL and disable the dev URL.
app.openapi.prod-url=${OPENAPI_PROD_URL:http://16.171.9.26:8089}
app.openapi.dev-url=${OPENAPI_DEV_URL:}
app.openapi.title=${OPENAPI_TITLE:JobPulse Job Service API - Production}
app.openapi.version=${OPENAPI_VERSION:1.0.0}
app.openapi.description=${OPENAPI_DESCRIPTION:Production deployment of job posting and management service for JobPulse platform}


# --- Actuator & Observability Configuration ---
# Only expose necessary endpoints for monitoring.
management.endpoints.web.exposure.include=health,prometheus,metrics
# Disable detailed health checks for security reasons.
management.endpoint.health.show-details=never
management.endpoint.health.show-components=never
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
# Metrics distribution settings are kept as good defaults.
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5, 0.95, 0.99
management.metrics.distribution.slo.http.server.requests=100ms, 200ms, 500ms, 1s, 2s
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=prod

# OpenTelemetry configuration is kept as-is, assuming it points to a production collector.
management.otlp.metrics.export.enabled=true
management.otlp.tracing.export.enabled=true
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


# --- Enhanced Logging Configuration ---
# Set application-specific logging to INFO to reduce verbosity in production.
logging.level.com.jobpulse.jobcreationlisting=INFO
logging.level.com.jobpulse.jobcreationlisting.events=INFO
logging.level.com.jobpulse.jobcreationlisting.service=INFO
logging.level.com.jobpulse.jobcreationlisting.controller=INFO
# Springdoc logging is also disabled via the property below, but it's good practice
# to keep this explicit.
logging.level.org.springdoc=WARN


# --- Database connection pool metrics ---
# MBeans for connection pool metrics are useful for monitoring in production.
spring.datasource.hikari.register-mbeans=true


# --- Environment-specific configuration inclusion ---
# The import path is updated to the production environment.
spring.config.import=optional:classpath:observability/environments/prod/application-observability.properties