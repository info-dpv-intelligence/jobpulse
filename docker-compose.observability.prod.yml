version: '3.8'

services:
  # Production Prometheus with HA and persistence
  prometheus-prod:
    image: prom/prometheus:v2.45.0
    container_name: jobpulse-prometheus-prod
    ports:
      - "9092:9090"
    volumes:
      - ./observability/environments/prod/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./observability/alerts:/etc/prometheus/alerts
      - prometheus-prod-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=50GB'
      - '--web.enable-lifecycle'
      - '--web.external-url=https://prometheus.yourdomain.com'
      - '--log.level=warn'
    restart: unless-stopped
    networks:
      - jobpulse-observability-prod
    environment:
      - ENVIRONMENT=prod
      - REGION=${AWS_REGION:-eu-west-1}
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    labels:
      - "environment=prod"
      - "service=prometheus"
      - "backup=true"

  # Production Grafana with enterprise features
  grafana-prod:
    image: grafana/grafana:10.0.0
    container_name: jobpulse-grafana-prod
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_LOG_LEVEL=warn
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN:-grafana.yourdomain.com}
      - GF_SERVER_ROOT_URL=https://${GRAFANA_DOMAIN:-grafana.yourdomain.com}
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST}
      - GF_SMTP_USER=${SMTP_USER}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
    volumes:
      - grafana-prod-data:/var/lib/grafana
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./observability/environments/prod/datasources:/etc/grafana/provisioning/datasources
      - ./observability/environments/prod/dashboards:/etc/grafana/provisioning/dashboards/prod
    restart: unless-stopped
    networks:
      - jobpulse-observability-prod
    depends_on:
      - prometheus-prod
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    labels:
      - "environment=prod"
      - "service=grafana"
      - "backup=true"

  # Production Jaeger with persistent storage
  jaeger-prod:
    image: jaegertracing/all-in-one:1.47
    container_name: jobpulse-jaeger-prod
    ports:
      - "16688:16686"  # Jaeger UI
      - "14252:14250"  # gRPC
      - "4321:4317"    # OTLP gRPC receiver
      - "4322:4318"    # OTLP HTTP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=warn
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=${ELASTICSEARCH_URL:-http://elasticsearch:9200}
    restart: unless-stopped
    networks:
      - jobpulse-observability-prod
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    labels:
      - "environment=prod"
      - "service=jaeger"

  # Node Exporter for system metrics
  node-exporter-prod:
    image: prom/node-exporter:v1.6.0
    container_name: jobpulse-node-exporter-prod
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped
    networks:
      - jobpulse-observability-prod
    labels:
      - "environment=prod"
      - "service=node-exporter"

  # Blackbox Exporter for external monitoring
  blackbox-exporter-prod:
    image: prom/blackbox-exporter:v0.24.0
    container_name: jobpulse-blackbox-exporter-prod
    ports:
      - "9115:9115"
    volumes:
      - ./observability/environments/prod/blackbox.yml:/etc/blackbox_exporter/config.yml
    restart: unless-stopped
    networks:
      - jobpulse-observability-prod
    labels:
      - "environment=prod"
      - "service=blackbox-exporter"

  # Postgres Exporter for production database
  postgres-exporter-prod:
    image: prometheuscommunity/postgres-exporter:v0.13.2
    container_name: jobpulse-postgres-exporter-prod
    ports:
      - "9189:9187"
    environment:
      - DATA_SOURCE_NAME=${POSTGRES_EXPORTER_DSN}
      - PG_EXPORTER_LOG_LEVEL=warn
    restart: unless-stopped
    networks:
      - jobpulse-observability-prod
      - jobpulse-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
    labels:
      - "environment=prod"
      - "service=postgres-exporter"

  # Kafka Exporter for production messaging
  kafka-exporter-prod:
    image: danielqsj/kafka-exporter:v1.6.0
    container_name: jobpulse-kafka-exporter-prod
    ports:
      - "9309:9308"
    command:
      - '--kafka.server=${KAFKA_BROKERS}'
      - '--log.level=warn'
    restart: unless-stopped
    networks:
      - jobpulse-observability-prod
      - jobpulse-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
    labels:
      - "environment=prod"
      - "service=kafka-exporter"

volumes:
  prometheus-prod-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PROMETHEUS_DATA_PATH:-./data/prometheus}
  grafana-prod-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${GRAFANA_DATA_PATH:-./data/grafana}

networks:
  jobpulse-observability-prod:
    driver: bridge
    labels:
      - "environment=prod"
      - "project=jobpulse"
  jobpulse-network:
    external: true
